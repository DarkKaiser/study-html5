<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="kr.co.darkkaiser" />
	
	
	
	
	
	
	
	
	
	
	
	<beans:bean id="helloTarget" class="kr.co.darkkaiser.HelloTarget" />
	
	<beans:bean id="uppercaseAdvice" class="kr.co.darkkaiser.UppercaseAdvice" />
	
	<beans:bean id="uppercasePointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
		<beans:property name="mappedName" value="sayH*" />
	</beans:bean>
	
	<beans:bean id="helloAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<beans:property name="advice" ref="uppercaseAdvice" />
		<beans:property name="pointcut" ref="uppercasePointcut" />
	</beans:bean>

	<!-- 새로운 타킷을 적용하려면 아래의 설정 파일이 계속 추가되는 단점이 있다. -->
	<beans:bean class="org.springframework.aop.framework.ProxyFactoryBean">
		<beans:property name="target" ref="helloTarget" />
		<beans:property name="interceptorNames">
			<beans:list>
				<beans:value>helloAdvisor</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
</beans:beans>
